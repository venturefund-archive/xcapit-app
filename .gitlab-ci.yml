---
include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - dependencies
  - syntax
  - test
  - build
  - release
  - docker-build

image: docker:19.03.1
services:
  - docker:19.03.1-dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  HADOLINT_REPO: hadolint/hadolint
  HADOLINT_TAG: v2.0.0-alpine
  SRC_DIR: '.'
  NODE_VERSION: '14'

#cache:
#  paths:
#    - node_modules/

###########################################################################
###########################################################################
### Templates

install_dependencies:
  image: node:${NODE_VERSION}-alpine
  stage: dependencies
  before_script:
    - npm install yarn
  script:
    - yarn --silent install
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules

### Syntax check
.syntax-check: &syntax-check
  stage: syntax
  image: node:${NODE_VERSION}-alpine
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
    policy: pull
  before_script:
    - cd ${SRC_DIR}
  script:
    - npm link @angular/cli@12.2.13
    - ng lint
  allow_failure: true

### NodeJS test
.nodejs-test: &nodejs-test
  image: markhobson/node-chrome:latest
  stage: test
  script:
    - npm link @angular/cli@12.2.13
    - npm run test-ci
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
    policy: pull
  variables:
    CI: 'true'
    COVERALLS_REPO_TOKEN: $COVERALLS_REPO_TOKEN

### Docker lint
.docker-lint: &docker-lint
  stage: syntax
  image: '${HADOLINT_REPO}:${HADOLINT_TAG}'
  before_script:
    - hadolint --version
    - cd ${SRC_DIR}
  script:
    - hadolint --ignore DL3018 --ignore DL3006 --ignore DL3003 --ignore DL3013 --ignore DL3007 --ignore DL3002 --ignore DL3008 --ignore DL3042 --ignore DL3016 Dockerfile

### Semantic release
.semantic-release: &semantic-release
  stage: release
  image: node:${NODE_VERSION}
  before_script:
    - npm install @semantic-release/gitlab @semantic-release/changelog @semantic-release/release-notes-generator @semantic-release/git -D
    - npm cache clean --force
    - npm cache verify

###########################################################################
###########################################################################
### Stages

# # Test
docker_lint:
  <<: *docker-lint
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

### Syntax check
syntax_checking:
  <<: *syntax-check
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

code_quality:
  stage: test
  artifacts:
    paths: [gl-code-quality-report.json]
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

### pytest
test:
  <<: *nodejs-test
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'

# # Release
release_master:
  <<: *semantic-release
  only:
    refs:
      - master
  script:
    - npx semantic-release -p "@semantic-release/commit-analyzer" "@semantic-release/changelog" "@semantic-release/git"

release_develop:
  <<: *semantic-release
  only:
    refs:
      - develop
  script:
    - npx semantic-release --tag-format ${CI_COMMIT_BRANCH}-\${version} -p "@semantic-release/commit-analyzer" "@semantic-release/changelog" "@semantic-release/git"
