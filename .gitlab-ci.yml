---
stages:
  - syntax
  - test
  - coveralls
  - build
  - release
  - docker-build

image: docker:19.03.1
services:
  - docker:19.03.1-dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  HADOLINT_REPO: hadolint/hadolint
  HADOLINT_TAG: v2.0.0-alpine
  SRC_DIR: '.'
  NODE_VERSION: '16.14.2'

cache:
  key:
    files:
      - yarn.lock
  paths:
    - node_modules

###########################################################################
###########################################################################
### Templates

### Syntax check
.syntax-check: &syntax-check
  stage: syntax
  image: node:${NODE_VERSION}-alpine
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
    policy: pull
  before_script:
    - cd ${SRC_DIR}
  script:
    - node --check *.js
  allow_failure: true

### NodeJS test
.nodejs-test: &nodejs-test
  stage: test
  image: node:${NODE_VERSION}
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
    policy: pull
  variables:
    CI: 'true'
    COVERALLS_REPO_TOKEN: $COVERALLS_REPO_TOKEN

  before_script:
    - cd ${SRC_DIR}
    - apt-get update -yqq
    - apt-get -qq install -y xvfb
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - apt-get update -yqq
    - apt-get -qq install -y google-chrome-stable
    - Xvfb :0 -ac -screen 0 1024x768x24 &
    - export DISPLAY=:99
  script:
    - yarn install
    - export CHROME_BIN=/usr/bin/google-chrome
    - npm run test-ci
  artifacts:
    paths:
      - coverage/lcov.info

## Coveralls
.coveralls: &coveralls
  stage: coveralls
  needs: ["test"]
  image: node:${NODE_VERSION}
  script:
    - npm i -g coveralls
    - npm run coveralls
  allow_failure: true

### Docker lint
.docker-lint: &docker-lint
  stage: syntax
  image: '${HADOLINT_REPO}:${HADOLINT_TAG}'
  before_script:
    - hadolint --version
    - cd ${SRC_DIR}
  script:
    - hadolint --ignore DL3018 --ignore DL3006 --ignore DL3003 --ignore DL3013 --ignore DL3007 --ignore DL3002 --ignore DL3008 --ignore DL3042 --ignore DL3016 Dockerfile

### Semantic release
.semantic-release: &semantic-release
  stage: release
  image: node:18
  before_script:
    - npm install --legacy-peer-deps @semantic-release/gitlab @semantic-release/changelog @semantic-release/release-notes-generator @semantic-release/git -D
    - npm cache clean --force
    - npm cache verify

###########################################################################
##########################################################################
### Stages

# # Test
docker_lint:
  <<: *docker-lint
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

### Syntax check
syntax_checking:
  <<: *syntax-check
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

### pytest
test:
  <<: *nodejs-test
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'

### coveralls
coveralls:
  <<: *coveralls
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
# # Release
release_master:
  <<: *semantic-release
  only:
    refs:
      - master
  script:
    - npx semantic-release -p "@semantic-release/commit-analyzer" "@semantic-release/changelog" "@semantic-release/git"

release_develop:
  <<: *semantic-release
  only:
    refs:
      - develop
  script:
    - npx semantic-release --tag-format ${CI_COMMIT_BRANCH}-\${version} -p "@semantic-release/commit-analyzer" "@semantic-release/changelog" "@semantic-release/git"

